# Generated by Django 4.0.3 on 2022-07-25 06:17

import accounts.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='university',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='大学名')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='琉大メールアドレス')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='ユーザーネーム')),
                ('openingSystem', models.CharField(choices=[('昼間主', '昼間主'), ('夜間主', '夜間主')], max_length=10, verbose_name='昼間主・夜間主')),
                ('department', models.CharField(choices=[('', '選択してください（必須）'), ('人文社会学部', '人文社会学部'), ('国際地域創造学部', '国際地域創造学部'), ('教育学部', '教育学部'), ('理学部', '理学部'), ('医学部', '医学部'), ('工学部', '工学部'), ('農学部', '農学部')], max_length=20, verbose_name='学部')),
                ('subject', models.CharField(choices=[('', '選択してください（必須）'), ('国際法政学科', '国際法政学科'), ('人間社会学科', '人間社会学科'), ('琉球アジア文化学科', '琉球アジア文化学科'), ('国際地域創造学科', '国際地域創造学科'), ('学校教育教員養成課程', '学校教育教員養成課程'), ('数理科学科', '数理科学科'), ('物質地球科学科', '物質地球科学科'), ('海洋自然科学科', '海洋自然科学科'), ('医学科', '医学科'), ('保健学科', '保健学科'), ('工学科', '工学科'), ('亜熱帯地域農学科', '亜熱帯地域農学科'), ('亜熱帯農林環境科学科', '亜熱帯農林環境科学科'), ('地域農業工学科', '地域農業工学科'), ('亜熱帯生物資源科学科', '亜熱帯生物資源科学科')], max_length=20, verbose_name='学科・課程')),
                ('course', models.CharField(blank=True, choices=[('', '選択してください（任意）'), ('法学プログラム', '法学プログラム'), ('政治・国際関係学プログラム', '政治・国際関係学プログラム'), ('哲学・教育学プログラム', '哲学・教育学プログラム'), ('心理学プログラム', '心理学プログラム'), ('社会学プログラム', '社会学プログラム'), ('歴史・民俗学プログラム', '歴史・民俗学プログラム'), ('言語学プログラム', '言語学プログラム'), ('文学プログラム', '文学プログラム'), ('観光地域デザインプログラム', '観光地域デザインプログラム'), ('経済学プログラム', '経済学プログラム'), ('地域文化科学プログラム', '地域文化科学プログラム'), ('国際言語文化プログラム', '国際言語文化プログラム'), ('経営プログラム', '経営プログラム'), ('小学校教育コース', '小学校教育コース'), ('中学校教育コース', '中学校教育コース'), ('特別支援教育コース', '特別支援教育コース'), ('物理系', '物理系'), ('地学系', '地学系'), ('化学系', '化学系'), ('生物系', '生物系'), ('機械工学コース', '機械工学コース'), ('エネルギー環境工学コース', 'エネルギー環境工学コース'), ('電気システム工学コース', '電気システム工学コース'), ('社会基盤デザインコース', '社会基盤デザインコース'), ('建築学コース', '建築学コース'), ('知能情報コース', '知能情報コース'), ('健康栄養科学コース', '健康栄養科学コース')], max_length=20, null=True, verbose_name='プログラム、コース')),
                ('major', models.CharField(blank=True, choices=[('', '選択してください（任意）'), ('学校教育専攻', '学校教育専攻'), ('教科教育専攻', '教科教育専攻'), ('哲学・教育学プログラム', '哲学・教育学プログラム'), ('特別支援教育専攻', '特別支援教育専攻')], max_length=20, null=True, verbose_name='専攻')),
                ('specialization', models.CharField(blank=True, choices=[('', '選択してください（任意）'), ('国語教育専修', '国語教育専修'), ('社会科教育専修', '社会科教育専修'), ('数学教育専修', '数学教育専修'), ('理科教育専修', '理科教育専修'), ('音楽教育専修', '音楽教育専修'), ('美術教育専修', '美術教育専修'), ('技術教育専修', '技術教育専修'), ('生活科学教育専修', '生活科学教育専修'), ('英語教育専修', '英語教育専修'), ('特別支援教育専修', '特別支援教育専修')], max_length=20, null=True, verbose_name='専修')),
                ('graduationYear', models.IntegerField(choices=[('', '選択してください（必須）'), (2022, '2022年'), (2023, '2023年'), (2024, '2024年'), (2025, '2025年')], verbose_name='卒業見込み年')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='更新日')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.university', verbose_name='大学名')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
